Index: src/main/java/com/project/CS151Parking_Management_System/HomePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.CS151Parking_Management_System;\n\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.util.Optional;\n\nimport org.apache.logging.log4j.message.Message;\n\nimport com.vaadin.flow.component.button.Button;\nimport com.vaadin.flow.component.html.Div;\nimport com.vaadin.flow.component.html.H1;\nimport com.vaadin.flow.component.orderedlayout.HorizontalLayout;\nimport com.vaadin.flow.component.orderedlayout.VerticalLayout;\nimport com.vaadin.flow.router.BeforeEnterEvent;\nimport com.vaadin.flow.router.BeforeEnterObserver;\nimport com.vaadin.flow.router.BeforeEvent;\nimport com.vaadin.flow.router.HasUrlParameter;\nimport com.vaadin.flow.router.OptionalParameter;\nimport com.vaadin.flow.router.Route;\nimport com.vaadin.flow.router.WildcardParameter;\nimport com.vaadin.flow.server.VaadinService;\nimport com.vaadin.flow.server.VaadinServletRequest;\n\n\n@Route(\"homePage/:plateNumber?/:password?\")\npublic class HomePage extends VerticalLayout implements BeforeEnterObserver {\n\n    String plateString = \"\";\n    String passString = \"\";\n\n    @Override\n    public void beforeEnter(BeforeEnterEvent event) {\n        // TODO Auto-generated method stub\n        final Optional<String> plateNumber = event.getRouteParameters().get(\"plateNumber\");\n        final Optional<String> password = event.getRouteParameters().get(\"password\");\n        plateNumber.ifPresentOrElse(id -> {\n            plateString = id;\n        }, \n        () -> {\n            System.out.println(\"UHOH\");\n        });\n\n        password.ifPresentOrElse(id -> {\n            passString = id;\n        }, \n        () -> {\n            System.out.println(\"UHOH\");\n        });\n        InfluxHandler influx = new InfluxHandler();\n        try {\n            String passwordOfficial = influx.parseData(influx.getData(\"mydb\"), plateString, false);\n            if(passString.equals(passwordOfficial)){\n                div1();\n                div2();\n                // div3();\n            }\n            else{\n                add(new H1(\"Oops youre not supposed to be here\"));\n            }\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n    public void div1(){\n        Div div = new Div();\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"100%\");\n        div.getStyle().set(\"height\", \"18.75em\");\n        // div.getStyle().set(\"border-radius\", \"10em\");\n\n        H1 plate = new H1(\"Plate #\" + plateString);\n        H1 password = new H1(passString);\n\n        H1 currentAmount = new H1(\"Thank You for Choosing Us\");\n\n        \n        div.add(new HorizontalLayout(new VerticalLayout(plate, password), currentAmount));\n        add(div);\n    }\n\n    public void div2(){\n        Div div = new Div();\n        setHorizontalComponentAlignment(Alignment.CENTER, div);\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"100%\");\n        div.getStyle().set(\"height\", \"18.75em\");\n        // div.getStyle().set(\"border-radius\", \"10em\");\n\n        H1 payNeeded = new H1(\"Need to Pay for Parking?\");\n        Button pay = new Button(\"Pay Here\");\n        H1 currentAmount = new H1(\"Paid Status\");\n        pay.addClickListener(e -> {\n            InfluxHandler influx = new InfluxHandler();\n            DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd-HH\");  \n            LocalDateTime now = LocalDateTime.now();  \n            System.out.println(dtf.format(now)); \n            try {\n                influx.createDB(\"garage\");\n                influx.postDataTime(dtf.format(now), plateString);\n                currentAmount.getStyle().set(\"color\", \"green\");\n            } catch (IOException e1) {\n                e1.printStackTrace();\n            }\n\n        });\n        if(isGreen()) currentAmount.getStyle().set(\"color\", \"green\");\n        else currentAmount.getStyle().set(\"color\", \"red\");\n\n        div.add(new HorizontalLayout(new VerticalLayout(payNeeded, pay), currentAmount));\n        add(div);\n    }\n\n    public void div3(){\n        Div div = new Div();\n        setHorizontalComponentAlignment(Alignment.END, div);\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"50%\");\n        div.getStyle().set(\"height\", \"18.75em\");\n        div.getStyle().set(\"border-radius\", \"10em\");\n\n        add(div);\n    }\n\n    public boolean isGreen(){\n        InfluxHandler influx = new InfluxHandler();\n        try {\n            String time = influx.parseData(influx.getData(\"garage\"), plateString, true);\n            DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd-HH\");  \n            LocalDateTime now = LocalDateTime.now();  \n            String influxTime = dtf.format(now);\n            System.out.println(\"Time: \" + time + \"   DTF: \" + influxTime);\n            if(influxTime.equals(time)) return true;\n            return false;\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return false;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/HomePage.java b/src/main/java/com/project/CS151Parking_Management_System/HomePage.java
--- a/src/main/java/com/project/CS151Parking_Management_System/HomePage.java	(revision cc6cb5f1f803245cdd1325aef69b97ae021146a3)
+++ b/src/main/java/com/project/CS151Parking_Management_System/HomePage.java	(date 1669680151868)
@@ -40,14 +40,14 @@
             plateString = id;
         }, 
         () -> {
-            System.out.println("UHOH");
+            System.out.println("UH OH");
         });
 
         password.ifPresentOrElse(id -> {
             passString = id;
         }, 
         () -> {
-            System.out.println("UHOH");
+            System.out.println("UH OH");
         });
         InfluxHandler influx = new InfluxHandler();
         try {
@@ -58,7 +58,7 @@
                 // div3();
             }
             else{
-                add(new H1("Oops youre not supposed to be here"));
+                add(new H1("Oops you are not supposed to be here"));
             }
         } catch (IOException e) {
             // TODO Auto-generated catch block
@@ -134,8 +134,7 @@
             LocalDateTime now = LocalDateTime.now();  
             String influxTime = dtf.format(now);
             System.out.println("Time: " + time + "   DTF: " + influxTime);
-            if(influxTime.equals(time)) return true;
-            return false;
+            return influxTime.equals(time);
         } catch (IOException e) {
             e.printStackTrace();
         }
Index: src/main/java/com/project/CS151Parking_Management_System/Register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.CS151Parking_Management_System;\n\nimport java.io.IOException;\n\nimport com.vaadin.flow.component.HtmlComponent;\nimport com.vaadin.flow.component.button.Button;\nimport com.vaadin.flow.component.html.Div;\nimport com.vaadin.flow.component.html.Paragraph;\nimport com.vaadin.flow.component.orderedlayout.HorizontalLayout;\nimport com.vaadin.flow.component.orderedlayout.VerticalLayout;\nimport com.vaadin.flow.component.textfield.PasswordField;\nimport com.vaadin.flow.component.textfield.TextField;\nimport com.vaadin.flow.router.Route;\n\n@Route(\"register\")\npublic class Register extends VerticalLayout{\n    public Register() {\n\n        HtmlComponent br = new HtmlComponent(\"br\");\n\n        getStyle().set(\"text-align\", \"center\");\n        Div div = new Div();\n        setHorizontalComponentAlignment(Alignment.CENTER, div);\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"50%\");\n        div.getStyle().set(\"height\", \"18.75em\");\n        div.getStyle().set(\"margin\", \"auto\");\n        div.getStyle().set(\"border-radius\", \"10em\");\n        \n        div.add(br);\n        TextField licensePlate = new TextField();\n        Paragraph licenseLabel = new Paragraph(\"License Plate #\");\n        HorizontalLayout l4 = new HorizontalLayout(licenseLabel, licensePlate);\n        l4.setAlignItems(Alignment.CENTER);\n        l4.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l4);\n\n        \n\n        TextField licensePlateConfirm = new TextField();\n        Paragraph licenseLabelConfirm = new Paragraph(\"Confirm Plate #\");\n        HorizontalLayout l3 = new HorizontalLayout(licenseLabelConfirm, licensePlateConfirm);\n        l3.setAlignItems(Alignment.CENTER);\n        l3.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l3);\n\n\n        PasswordField password = new PasswordField();\n        Paragraph passwordLabel = new Paragraph(\"Enter a Password\");\n        HorizontalLayout l2 = new HorizontalLayout(password, passwordLabel);\n        l2.setAlignItems(Alignment.CENTER);\n        l2.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l2);\n\n        PasswordField passwordConfirm = new PasswordField();\n        Paragraph passwordLabelConfirm = new Paragraph(\"Confirm Password\");\n        HorizontalLayout l = new HorizontalLayout(passwordConfirm, passwordLabelConfirm);\n        l.setAlignItems(Alignment.CENTER);\n        l.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l);\n\n        Button registerButton = new Button(\"Register\");\n        registerButton.addClickListener(e -> {\n            boolean passwordChecked = false;\n            boolean licenseChecked = false;\n            if(password.getValue() == \"\") passwordLabel.getStyle().set(\"color\", \"red\");\n            else passwordLabel.getStyle().set(\"color\", \"black\");\n\n            if(licensePlate.getValue() == \"\") licenseLabel.getStyle().set(\"color\", \"red\");\n            else licenseLabel.getStyle().set(\"color\", \"black\");\n\n            if(licensePlateConfirm.getValue() == \"\") licenseLabelConfirm.getStyle().set(\"color\", \"red\");\n            else licenseLabelConfirm.getStyle().set(\"color\", \"black\");\n\n            if(passwordConfirm.getValue() == \"\") passwordLabelConfirm.getStyle().set(\"color\", \"red\");\n            else passwordLabelConfirm.getStyle().set(\"color\", \"black\");\n            \n            if(!password.getValue().equals(passwordConfirm.getValue()) && password.getValue() != \"\" && passwordConfirm.getValue() != \"\"){\n                passwordLabel.getStyle().set(\"color\", \"red\");\n                passwordLabelConfirm.getStyle().set(\"color\", \"red\");\n            }\n            if(password.getValue().equals(passwordConfirm.getValue()) && password.getValue() != \"\" && passwordConfirm.getValue() != \"\"){\n                passwordLabel.getStyle().set(\"color\", \"#065535\");\n                passwordLabelConfirm.getStyle().set(\"color\", \"#065535\");\n                passwordChecked = true;\n            }\n\n            if(!licensePlate.getValue().equals(licensePlateConfirm.getValue()) && licensePlate.getValue() != \"\" && licensePlateConfirm.getValue() != \"\"){\n                licenseLabel.getStyle().set(\"color\", \"red\");\n                licenseLabelConfirm.getStyle().set(\"color\", \"red\");\n            }\n            if(licensePlate.getValue().equals(licensePlateConfirm.getValue()) && licensePlate.getValue() != \"\" && licensePlateConfirm.getValue() != \"\"){\n                licenseLabel.getStyle().set(\"color\", \"#065535\");\n                licenseLabelConfirm.getStyle().set(\"color\", \"#065535\");\n                licenseChecked = true;\n            } \n\n            if(passwordChecked && licenseChecked){\n                InfluxHandler influx = new InfluxHandler();\n                try {\n                    influx.createDB(\"mydb\");\n                    influx.postData(password.getValue(), licensePlate.getValue());\n                    influx.postDataKey(licensePlate.getValue(), influx.getAlphaNumericString(40));\n                    Thread.sleep(2000);\n                    registerButton.getUI().ifPresent(ui ->\n                            ui.navigate(\"\")\n                    );\n                } catch (IOException | InterruptedException e1) {\n                    e1.printStackTrace();\n                }\n            }\n        });\n        div.add(registerButton);\n\t\tadd(div);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/Register.java b/src/main/java/com/project/CS151Parking_Management_System/Register.java
--- a/src/main/java/com/project/CS151Parking_Management_System/Register.java	(revision cc6cb5f1f803245cdd1325aef69b97ae021146a3)
+++ b/src/main/java/com/project/CS151Parking_Management_System/Register.java	(date 1669678983130)
@@ -1,6 +1,7 @@
 package com.project.CS151Parking_Management_System;
 
 import java.io.IOException;
+import java.util.Objects;
 
 import com.vaadin.flow.component.HtmlComponent;
 import com.vaadin.flow.component.button.Button;
@@ -13,10 +14,10 @@
 import com.vaadin.flow.router.Route;
 
 @Route("register")
-public class Register extends VerticalLayout{
+public class Register extends VerticalLayout {
     public Register() {
 
-        HtmlComponent br = new HtmlComponent("br");
+        HtmlComponent lineBreak = new HtmlComponent("br");
 
         getStyle().set("text-align", "center");
         Div div = new Div();
@@ -27,52 +28,52 @@
         div.getStyle().set("margin", "auto");
         div.getStyle().set("border-radius", "10em");
         
-        div.add(br);
-        TextField licensePlate = new TextField();
-        Paragraph licenseLabel = new Paragraph("License Plate #");
-        HorizontalLayout l4 = new HorizontalLayout(licenseLabel, licensePlate);
-        l4.setAlignItems(Alignment.CENTER);
-        l4.getStyle().set("margin-left", "9em");
-        div.add(l4);
+        div.add(lineBreak);
+        TextField licensePlateField = new TextField();
+        Paragraph licensePlateLabel = new Paragraph("License Plate #");
+        HorizontalLayout licensePlateLayout = new HorizontalLayout(licensePlateLabel, licensePlateField);
+        licensePlateLayout.setAlignItems(Alignment.CENTER);
+        licensePlateLayout.getStyle().set("margin-left", "9em");
+        div.add(licensePlateLayout);
 
         
 
         TextField licensePlateConfirm = new TextField();
         Paragraph licenseLabelConfirm = new Paragraph("Confirm Plate #");
-        HorizontalLayout l3 = new HorizontalLayout(licenseLabelConfirm, licensePlateConfirm);
-        l3.setAlignItems(Alignment.CENTER);
-        l3.getStyle().set("margin-left", "9em");
-        div.add(l3);
+        HorizontalLayout licensePlateConfirmLayout = new HorizontalLayout(licenseLabelConfirm, licensePlateConfirm);
+        licensePlateConfirmLayout.setAlignItems(Alignment.CENTER);
+        licensePlateConfirmLayout.getStyle().set("margin-left", "9em");
+        div.add(licensePlateConfirmLayout);
 
 
         PasswordField password = new PasswordField();
         Paragraph passwordLabel = new Paragraph("Enter a Password");
-        HorizontalLayout l2 = new HorizontalLayout(password, passwordLabel);
-        l2.setAlignItems(Alignment.CENTER);
-        l2.getStyle().set("margin-left", "9em");
-        div.add(l2);
+        HorizontalLayout passwordLayout = new HorizontalLayout(password, passwordLabel);
+        passwordLayout.setAlignItems(Alignment.CENTER);
+        passwordLayout.getStyle().set("margin-left", "9em");
+        div.add(passwordLayout);
 
         PasswordField passwordConfirm = new PasswordField();
         Paragraph passwordLabelConfirm = new Paragraph("Confirm Password");
-        HorizontalLayout l = new HorizontalLayout(passwordConfirm, passwordLabelConfirm);
-        l.setAlignItems(Alignment.CENTER);
-        l.getStyle().set("margin-left", "9em");
-        div.add(l);
+        HorizontalLayout passwordConfirmLayout = new HorizontalLayout(passwordConfirm, passwordLabelConfirm);
+        passwordConfirmLayout.setAlignItems(Alignment.CENTER);
+        passwordConfirmLayout.getStyle().set("margin-left", "9em");
+        div.add(passwordConfirmLayout);
 
         Button registerButton = new Button("Register");
         registerButton.addClickListener(e -> {
             boolean passwordChecked = false;
             boolean licenseChecked = false;
-            if(password.getValue() == "") passwordLabel.getStyle().set("color", "red");
+            if(Objects.equals(password.getValue(), "")) passwordLabel.getStyle().set("color", "red");
             else passwordLabel.getStyle().set("color", "black");
 
-            if(licensePlate.getValue() == "") licenseLabel.getStyle().set("color", "red");
-            else licenseLabel.getStyle().set("color", "black");
+            if(Objects.equals(licensePlateField.getValue(), "")) licensePlateLabel.getStyle().set("color", "red");
+            else licensePlateLabel.getStyle().set("color", "black");
 
-            if(licensePlateConfirm.getValue() == "") licenseLabelConfirm.getStyle().set("color", "red");
+            if(Objects.equals(licensePlateConfirm.getValue(), "")) licenseLabelConfirm.getStyle().set("color", "red");
             else licenseLabelConfirm.getStyle().set("color", "black");
 
-            if(passwordConfirm.getValue() == "") passwordLabelConfirm.getStyle().set("color", "red");
+            if(Objects.equals(passwordConfirm.getValue(), "")) passwordLabelConfirm.getStyle().set("color", "red");
             else passwordLabelConfirm.getStyle().set("color", "black");
             
             if(!password.getValue().equals(passwordConfirm.getValue()) && password.getValue() != "" && passwordConfirm.getValue() != ""){
@@ -85,12 +86,12 @@
                 passwordChecked = true;
             }
 
-            if(!licensePlate.getValue().equals(licensePlateConfirm.getValue()) && licensePlate.getValue() != "" && licensePlateConfirm.getValue() != ""){
-                licenseLabel.getStyle().set("color", "red");
+            if(!licensePlateField.getValue().equals(licensePlateConfirm.getValue()) && licensePlateField.getValue() != "" && licensePlateConfirm.getValue() != ""){
+                licensePlateLabel.getStyle().set("color", "red");
                 licenseLabelConfirm.getStyle().set("color", "red");
             }
-            if(licensePlate.getValue().equals(licensePlateConfirm.getValue()) && licensePlate.getValue() != "" && licensePlateConfirm.getValue() != ""){
-                licenseLabel.getStyle().set("color", "#065535");
+            if(licensePlateField.getValue().equals(licensePlateConfirm.getValue()) && !Objects.equals(licensePlateField.getValue(), "") && licensePlateConfirm.getValue() != ""){
+                licensePlateLabel.getStyle().set("color", "#065535");
                 licenseLabelConfirm.getStyle().set("color", "#065535");
                 licenseChecked = true;
             } 
@@ -99,8 +100,8 @@
                 InfluxHandler influx = new InfluxHandler();
                 try {
                     influx.createDB("mydb");
-                    influx.postData(password.getValue(), licensePlate.getValue());
-                    influx.postDataKey(licensePlate.getValue(), influx.getAlphaNumericString(40));
+                    influx.postData(password.getValue(), licensePlateField.getValue());
+                    influx.postDataKey(licensePlateField.getValue(), influx.getAlphaNumericString(40));
                     Thread.sleep(2000);
                     registerButton.getUI().ifPresent(ui ->
                             ui.navigate("")
Index: src/main/java/com/project/CS151Parking_Management_System/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.CS151Parking_Management_System;\n\nimport java.io.IOException;\n\nimport com.vaadin.flow.component.HtmlComponent;\nimport com.vaadin.flow.component.button.Button;\nimport com.vaadin.flow.component.html.Div;\nimport com.vaadin.flow.component.html.Paragraph;\nimport com.vaadin.flow.component.orderedlayout.HorizontalLayout;\nimport com.vaadin.flow.component.orderedlayout.VerticalLayout;\nimport com.vaadin.flow.component.textfield.PasswordField;\nimport com.vaadin.flow.component.textfield.TextField;\nimport com.vaadin.flow.router.Route;\n\n@Route(\"login\")\npublic class Login extends VerticalLayout{\n    public Login() {\n        HtmlComponent br = new HtmlComponent(\"br\");\n\n        getStyle().set(\"text-align\", \"center\");\n        Div div = new Div();\n        setHorizontalComponentAlignment(Alignment.CENTER, div);\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"50%\");\n        div.getStyle().set(\"height\", \"12.75em\");\n        div.getStyle().set(\"margin\", \"auto\");\n        div.getStyle().set(\"border-radius\", \"10em\");\n        \n        div.add(br);\n        TextField licensePlate = new TextField();\n        Paragraph licenseLabel = new Paragraph(\"License Plate #\");\n        HorizontalLayout l4 = new HorizontalLayout(licenseLabel, licensePlate);\n        l4.setAlignItems(Alignment.CENTER);\n        l4.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l4);\n\n        \n\n        PasswordField password = new PasswordField();\n        Paragraph passwordLabel = new Paragraph(\"Password\");\n        HorizontalLayout l3 = new HorizontalLayout(password, passwordLabel);\n        l3.setAlignItems(Alignment.CENTER);\n        l3.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l3);\n\n        Button loginButton = new Button(\"Login\");\n        Paragraph statusText = new Paragraph(\"Please Enter Your Information\");\n        statusText.getStyle().set(\"color\", \"#1D3F6E\");\n        loginButton.addClickListener(e -> {\n            InfluxHandler influx = new InfluxHandler();\n            try {\n                String dataMydb = influx.getData(\"mydb\");\n                String dataKey = influx.getData(\"keys\");\n                String passwordText = influx.parseData(dataMydb, licensePlate.getValue(), false);\n                String key = influx.parseData(dataKey, licensePlate.getValue(), false);\n                if(passwordText.equals(\"Wrong License Plate\"))\n                    statusText.setText(\"We dont recognize that licenseplate\");\n                else if(password.getValue().equals(passwordText)){\n                    statusText.setText(\"Successful\");\n                        loginButton.getUI().ifPresent(ui ->\n                            ui.navigate(\"homePage/\" + licensePlate.getValue() + \"/\" + key)\n                        );\n                }\n                else \n                    statusText.setText(\"Wrong\");\n            } catch (IOException e1) {\n                e1.printStackTrace();\n            }\n        });\n\n        div.add(loginButton);\n        div.add(statusText);\n        add(div);\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/Login.java b/src/main/java/com/project/CS151Parking_Management_System/Login.java
--- a/src/main/java/com/project/CS151Parking_Management_System/Login.java	(revision cc6cb5f1f803245cdd1325aef69b97ae021146a3)
+++ b/src/main/java/com/project/CS151Parking_Management_System/Login.java	(date 1669678983119)
@@ -49,9 +49,9 @@
         loginButton.addClickListener(e -> {
             InfluxHandler influx = new InfluxHandler();
             try {
-                String dataMydb = influx.getData("mydb");
+                String parkingData = influx.getData("mydb");
                 String dataKey = influx.getData("keys");
-                String passwordText = influx.parseData(dataMydb, licensePlate.getValue(), false);
+                String passwordText = influx.parseData(parkingData, licensePlate.getValue(), false);
                 String key = influx.parseData(dataKey, licensePlate.getValue(), false);
                 if(passwordText.equals("Wrong License Plate"))
                     statusText.setText("We dont recognize that licenseplate");
Index: src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java b/src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java
new file mode 100644
--- /dev/null	(date 1669675189441)
+++ b/src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java	(date 1669675189441)
@@ -0,0 +1,9 @@
+package com.project.CS151Parking_Management_System;
+
+public class LowerCaseCharacterMissing extends PasswordException
+{
+	public LowerCaseCharacterMissing()
+	{
+		super("Password must contain at least one lowercase character.\nPlease try again.");
+	}
+}
Index: src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java b/src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java
new file mode 100644
--- /dev/null	(date 1669675189438)
+++ b/src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java	(date 1669675189438)
@@ -0,0 +1,9 @@
+package com.project.CS151Parking_Management_System;
+
+public class Minimum8CharactersRequired extends PasswordException
+{
+	public Minimum8CharactersRequired()
+	{
+		super("Password must contain a minimum of 8 characters.\nPlease try again.");
+	}
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"95eecc4c-4b8d-4fb8-829c-be5280362574\" name=\"Changes\" comment=\"Added Register.java\">\n      <change beforePath=\"$PROJECT_DIR$/node_modules/.vaadin/vaadin.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/node_modules/.vaadin/vaadin.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/node_modules/.vite/deps/_metadata.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/node_modules/.vite/deps/_metadata.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/package.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/package.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/Register.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/Register.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/vaadin-dev-server-settings.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/vaadin-dev-server-settings.json\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2IBjswiCYH0CLdvgXDgTRSp6Lmc\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"last_directory_selection\" value=\"$PROJECT_DIR$/src/main/java/com/classProject\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"Errors\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Cs151ParkingManagementSystemApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.project.CS151Parking_Management_System.Cs151ParkingManagementSystemApplication\" />\n      <module name=\"CS151-Parking_Management_System\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.project.CS151Parking_Management_System.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Doctests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Cs151ParkingManagementSystemApplication\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"95eecc4c-4b8d-4fb8-829c-be5280362574\" name=\"Changes\" comment=\"\" />\n      <created>1669662081501</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1669662081501</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Added Register.java\">\n      <created>1669667194262</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669667194263</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Added Register.java\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added Register.java\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision cc6cb5f1f803245cdd1325aef69b97ae021146a3)
+++ b/.idea/workspace.xml	(date 1669680808500)
@@ -4,12 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="95eecc4c-4b8d-4fb8-829c-be5280362574" name="Changes" comment="Added Register.java">
-      <change beforePath="$PROJECT_DIR$/node_modules/.vaadin/vaadin.json" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/.vaadin/vaadin.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/node_modules/.vite/deps/_metadata.json" beforeDir="false" afterPath="$PROJECT_DIR$/node_modules/.vite/deps/_metadata.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
+    <list default="true" id="95eecc4c-4b8d-4fb8-829c-be5280362574" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/NumberCharacterMissing.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/PasswordException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/SpecialCharacterMissing.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/UpperCaseCharacterMissing.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/HomePage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/HomePage.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/Login.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/CS151Parking_Management_System/Register.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/vaadin-dev-server-settings.json" beforeDir="false" afterPath="$PROJECT_DIR$/target/vaadin-dev-server-settings.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/com/project/CS151Parking_Management_System/HomePage.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/project/CS151Parking_Management_System/HomePage.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/com/project/CS151Parking_Management_System/Login.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/project/CS151Parking_Management_System/Login.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/com/project/CS151Parking_Management_System/Register.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/project/CS151Parking_Management_System/Register.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -142,11 +150,19 @@
       <option name="project" value="LOCAL" />
       <updated>1669667194263</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Modified Password Field">
+      <created>1669674037411</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1669674037411</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Added Register.java" />
-    <option name="LAST_COMMIT_MESSAGE" value="Added Register.java" />
+    <MESSAGE value="Modified Password Field" />
+    <option name="LAST_COMMIT_MESSAGE" value="Modified Password Field" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/com/project/CS151Parking_Management_System/PasswordException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/PasswordException.java b/src/main/java/com/project/CS151Parking_Management_System/PasswordException.java
new file mode 100644
--- /dev/null	(date 1669675189432)
+++ b/src/main/java/com/project/CS151Parking_Management_System/PasswordException.java	(date 1669675189432)
@@ -0,0 +1,9 @@
+package com.project.CS151Parking_Management_System;
+
+public class PasswordException extends Exception
+{
+	public PasswordException(String message)
+	{
+		super(message);
+	}
+}
Index: src/main/java/com/project/CS151Parking_Management_System/UpperCaseCharacterMissing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/UpperCaseCharacterMissing.java b/src/main/java/com/project/CS151Parking_Management_System/UpperCaseCharacterMissing.java
new file mode 100644
--- /dev/null	(date 1669675189418)
+++ b/src/main/java/com/project/CS151Parking_Management_System/UpperCaseCharacterMissing.java	(date 1669675189418)
@@ -0,0 +1,9 @@
+package com.project.CS151Parking_Management_System;
+
+public class UpperCaseCharacterMissing extends PasswordException
+{
+	public UpperCaseCharacterMissing()
+	{
+		super("Password must contain at least one uppercase character.\nPlease try again.");
+	}
+}
Index: src/main/java/com/project/CS151Parking_Management_System/SpecialCharacterMissing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/SpecialCharacterMissing.java b/src/main/java/com/project/CS151Parking_Management_System/SpecialCharacterMissing.java
new file mode 100644
--- /dev/null	(date 1669675189449)
+++ b/src/main/java/com/project/CS151Parking_Management_System/SpecialCharacterMissing.java	(date 1669675189449)
@@ -0,0 +1,9 @@
+package com.project.CS151Parking_Management_System;
+
+public class SpecialCharacterMissing extends PasswordException
+{
+	public SpecialCharacterMissing()
+	{
+		super("Password must contain at least one special character.\nPlease try again.");
+	}
+}
Index: src/main/java/com/project/CS151Parking_Management_System/NumberCharacterMissing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/NumberCharacterMissing.java b/src/main/java/com/project/CS151Parking_Management_System/NumberCharacterMissing.java
new file mode 100644
--- /dev/null	(date 1669675189445)
+++ b/src/main/java/com/project/CS151Parking_Management_System/NumberCharacterMissing.java	(date 1669675189445)
@@ -0,0 +1,9 @@
+package com.project.CS151Parking_Management_System;
+
+public class NumberCharacterMissing extends PasswordException
+{
+	public NumberCharacterMissing()
+	{
+		super("Password must contain at least one number.\nPlease try again.");
+	}
+}
