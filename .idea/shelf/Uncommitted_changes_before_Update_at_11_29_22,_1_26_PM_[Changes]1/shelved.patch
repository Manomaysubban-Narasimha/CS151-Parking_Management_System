Index: src/main/java/com/project/CS151Parking_Management_System/HomePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.CS151Parking_Management_System;\n\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.util.Optional;\n\nimport org.apache.logging.log4j.message.Message;\n\nimport com.vaadin.flow.component.button.Button;\nimport com.vaadin.flow.component.html.Div;\nimport com.vaadin.flow.component.html.H1;\nimport com.vaadin.flow.component.orderedlayout.HorizontalLayout;\nimport com.vaadin.flow.component.orderedlayout.VerticalLayout;\nimport com.vaadin.flow.router.BeforeEnterEvent;\nimport com.vaadin.flow.router.BeforeEnterObserver;\nimport com.vaadin.flow.router.BeforeEvent;\nimport com.vaadin.flow.router.HasUrlParameter;\nimport com.vaadin.flow.router.OptionalParameter;\nimport com.vaadin.flow.router.Route;\nimport com.vaadin.flow.router.WildcardParameter;\nimport com.vaadin.flow.server.VaadinService;\nimport com.vaadin.flow.server.VaadinServletRequest;\n\n\n@Route(\"homePage/:plateNumber?/:password?\")\npublic class HomePage extends VerticalLayout implements BeforeEnterObserver {\n\n    String plateString = \"\";\n    String passString = \"\";\n\n    @Override\n    public void beforeEnter(BeforeEnterEvent event) {\n        // TODO Auto-generated method stub\n        final Optional<String> plateNumber = event.getRouteParameters().get(\"plateNumber\");\n        final Optional<String> password = event.getRouteParameters().get(\"password\");\n        plateNumber.ifPresentOrElse(id -> {\n            plateString = id;\n        }, \n        () -> {\n            System.out.println(\"UHOH\");\n        });\n\n        password.ifPresentOrElse(id -> {\n            passString = id;\n        }, \n        () -> {\n            System.out.println(\"UHOH\");\n        });\n        InfluxHandler influx = new InfluxHandler();\n        try {\n            String passwordOfficial = influx.parseData(influx.getData(\"mydb\"), plateString, false);\n            if(passString.equals(passwordOfficial)){\n                div1();\n                div2();\n                // div3();\n            }\n            else{\n                add(new H1(\"Oops youre not supposed to be here\"));\n            }\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n    public void div1(){\n        Div div = new Div();\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"100%\");\n        div.getStyle().set(\"height\", \"18.75em\");\n        // div.getStyle().set(\"border-radius\", \"10em\");\n\n        H1 plate = new H1(\"Plate #\" + plateString);\n        H1 password = new H1(passString);\n\n        H1 currentAmount = new H1(\"Thank You for Choosing Us\");\n\n        \n        div.add(new HorizontalLayout(new VerticalLayout(plate, password), currentAmount));\n        add(div);\n    }\n\n    public void div2(){\n        Div div = new Div();\n        setHorizontalComponentAlignment(Alignment.CENTER, div);\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"100%\");\n        div.getStyle().set(\"height\", \"18.75em\");\n        // div.getStyle().set(\"border-radius\", \"10em\");\n\n        H1 payNeeded = new H1(\"Need to Pay for Parking?\");\n        Button pay = new Button(\"Pay Here\");\n        H1 currentAmount = new H1(\"Paid Status\");\n        pay.addClickListener(e -> {\n            InfluxHandler influx = new InfluxHandler();\n            DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd-HH\");  \n            LocalDateTime now = LocalDateTime.now();  \n            System.out.println(dtf.format(now)); \n            try {\n                influx.createDB(\"garage\");\n                influx.postDataTime(dtf.format(now), plateString);\n                currentAmount.getStyle().set(\"color\", \"green\");\n            } catch (IOException e1) {\n                e1.printStackTrace();\n            }\n\n        });\n        if(isGreen()) currentAmount.getStyle().set(\"color\", \"green\");\n        else currentAmount.getStyle().set(\"color\", \"red\");\n\n        div.add(new HorizontalLayout(new VerticalLayout(payNeeded, pay), currentAmount));\n        add(div);\n    }\n\n    public void div3(){\n        Div div = new Div();\n        setHorizontalComponentAlignment(Alignment.END, div);\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"50%\");\n        div.getStyle().set(\"height\", \"18.75em\");\n        div.getStyle().set(\"border-radius\", \"10em\");\n\n        add(div);\n    }\n\n    public boolean isGreen(){\n        InfluxHandler influx = new InfluxHandler();\n        try {\n            String time = influx.parseData(influx.getData(\"garage\"), plateString, true);\n            DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd-HH\");  \n            LocalDateTime now = LocalDateTime.now();  \n            String influxTime = dtf.format(now);\n            System.out.println(\"Time: \" + time + \"   DTF: \" + influxTime);\n            if(influxTime.equals(time)) return true;\n            return false;\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return false;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/HomePage.java b/src/main/java/com/project/CS151Parking_Management_System/HomePage.java
--- a/src/main/java/com/project/CS151Parking_Management_System/HomePage.java	
+++ b/src/main/java/com/project/CS151Parking_Management_System/HomePage.java	
@@ -40,14 +40,14 @@
             plateString = id;
         }, 
         () -> {
-            System.out.println("UHOH");
+            System.out.println("UH OH");
         });
 
         password.ifPresentOrElse(id -> {
             passString = id;
         }, 
         () -> {
-            System.out.println("UHOH");
+            System.out.println("UH OH");
         });
         InfluxHandler influx = new InfluxHandler();
         try {
@@ -58,7 +58,7 @@
                 // div3();
             }
             else{
-                add(new H1("Oops youre not supposed to be here"));
+                add(new H1("Oops you are not supposed to be here"));
             }
         } catch (IOException e) {
             // TODO Auto-generated catch block
@@ -134,8 +134,7 @@
             LocalDateTime now = LocalDateTime.now();  
             String influxTime = dtf.format(now);
             System.out.println("Time: " + time + "   DTF: " + influxTime);
-            if(influxTime.equals(time)) return true;
-            return false;
+            return influxTime.equals(time);
         } catch (IOException e) {
             e.printStackTrace();
         }
Index: src/main/java/com/project/CS151Parking_Management_System/Register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.CS151Parking_Management_System;\n\nimport java.io.IOException;\n\nimport com.vaadin.flow.component.HtmlComponent;\nimport com.vaadin.flow.component.button.Button;\nimport com.vaadin.flow.component.combobox.ComboBox;\nimport com.vaadin.flow.component.html.Div;\nimport com.vaadin.flow.component.html.Paragraph;\nimport com.vaadin.flow.component.orderedlayout.HorizontalLayout;\nimport com.vaadin.flow.component.orderedlayout.VerticalLayout;\nimport com.vaadin.flow.component.textfield.PasswordField;\nimport com.vaadin.flow.component.textfield.TextField;\nimport com.vaadin.flow.router.Route;\n\n\n@Route(\"register\")\npublic class Register extends VerticalLayout{\n    public Register() {\n\n        HtmlComponent br = new HtmlComponent(\"br\");\n\n        getStyle().set(\"text-align\", \"center\");\n        Div div = new Div();\n        setHorizontalComponentAlignment(Alignment.CENTER, div);\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"50%\");\n        div.getStyle().set(\"height\", \"20.75em\");\n        div.getStyle().set(\"margin\", \"auto\");\n        div.getStyle().set(\"border-radius\", \"10em\");\n        \n        div.add(br);\n        TextField licensePlate = new TextField();\n        Paragraph licenseLabel = new Paragraph(\"License Plate #\");\n        HorizontalLayout l4 = new HorizontalLayout(licenseLabel, licensePlate);\n        l4.setAlignItems(Alignment.CENTER);\n        l4.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l4);\n\n        \n\n        TextField licensePlateConfirm = new TextField();\n        Paragraph licenseLabelConfirm = new Paragraph(\"Confirm Plate #\");\n        HorizontalLayout l3 = new HorizontalLayout(licenseLabelConfirm, licensePlateConfirm);\n        l3.setAlignItems(Alignment.CENTER);\n        l3.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l3);\n\n//TODO: store vehicleType selection in DB\n        ComboBox vehicleType = new ComboBox(\"Select your vehicle type: \");\n        vehicleType.setItems(\"Motorcycle\",\"Truck\", \"SUV\", \"Electric Vehicle\");\n        HorizontalLayout l5 = new HorizontalLayout(vehicleType);\n        l5.setAlignItems(Alignment.CENTER);\n        l5.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l5);\n\n        \n\n\n\n\n        PasswordField password = new PasswordField();\n        Paragraph passwordLabel = new Paragraph(\"Enter a Password\");\n        HorizontalLayout l2 = new HorizontalLayout(password, passwordLabel);\n        l2.setAlignItems(Alignment.CENTER);\n        l2.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l2);\n\n        PasswordField passwordConfirm = new PasswordField();\n        Paragraph passwordLabelConfirm = new Paragraph(\"Confirm Password\");\n        HorizontalLayout l = new HorizontalLayout(passwordConfirm, passwordLabelConfirm);\n        l.setAlignItems(Alignment.CENTER);\n        l.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l);\n\n        Button registerButton = new Button(\"Register\");\n        registerButton.addClickListener(e -> {\n            boolean passwordChecked = false;\n            boolean licenseChecked = false;\n            if(password.getValue() == \"\") passwordLabel.getStyle().set(\"color\", \"red\");\n            else passwordLabel.getStyle().set(\"color\", \"black\");\n\n            if(licensePlate.getValue() == \"\") licenseLabel.getStyle().set(\"color\", \"red\");\n            else licenseLabel.getStyle().set(\"color\", \"black\");\n\n            if(licensePlateConfirm.getValue() == \"\") licenseLabelConfirm.getStyle().set(\"color\", \"red\");\n            else licenseLabelConfirm.getStyle().set(\"color\", \"black\");\n\n            if(passwordConfirm.getValue() == \"\") passwordLabelConfirm.getStyle().set(\"color\", \"red\");\n            else passwordLabelConfirm.getStyle().set(\"color\", \"black\");\n            \n            if(!password.getValue().equals(passwordConfirm.getValue()) && password.getValue() != \"\" && passwordConfirm.getValue() != \"\"){\n                passwordLabel.getStyle().set(\"color\", \"red\");\n                passwordLabelConfirm.getStyle().set(\"color\", \"red\");\n            }\n            if(password.getValue().equals(passwordConfirm.getValue()) && password.getValue() != \"\" && passwordConfirm.getValue() != \"\"){\n                passwordLabel.getStyle().set(\"color\", \"#065535\");\n                passwordLabelConfirm.getStyle().set(\"color\", \"#065535\");\n                passwordChecked = true;\n            }\n\n            if(!licensePlate.getValue().equals(licensePlateConfirm.getValue()) && licensePlate.getValue() != \"\" && licensePlateConfirm.getValue() != \"\"){\n                licenseLabel.getStyle().set(\"color\", \"red\");\n                licenseLabelConfirm.getStyle().set(\"color\", \"red\");\n            }\n            if(licensePlate.getValue().equals(licensePlateConfirm.getValue()) && licensePlate.getValue() != \"\" && licensePlateConfirm.getValue() != \"\"){\n                licenseLabel.getStyle().set(\"color\", \"#065535\");\n                licenseLabelConfirm.getStyle().set(\"color\", \"#065535\");\n                licenseChecked = true;\n            } \n\n            if(passwordChecked && licenseChecked){\n                InfluxHandler influx = new InfluxHandler();\n                try {\n                    influx.createDB(\"mydb\");\n                    influx.postData(password.getValue(), licensePlate.getValue());\n                    influx.postDataKey(licensePlate.getValue(), influx.getAlphaNumericString(40));\n                    Thread.sleep(2000);\n                    registerButton.getUI().ifPresent(ui ->\n                            ui.navigate(\"\")\n                    );\n                } catch (IOException | InterruptedException e1) {\n                    e1.printStackTrace();\n                }\n            }\n        });\n        div.add(registerButton);\n\t\tadd(div);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/Register.java b/src/main/java/com/project/CS151Parking_Management_System/Register.java
--- a/src/main/java/com/project/CS151Parking_Management_System/Register.java	
+++ b/src/main/java/com/project/CS151Parking_Management_System/Register.java	
@@ -1,6 +1,7 @@
 package com.project.CS151Parking_Management_System;
 
 import java.io.IOException;
+import java.util.Objects;
 
 import com.vaadin.flow.component.HtmlComponent;
 import com.vaadin.flow.component.button.Button;
@@ -15,10 +16,10 @@
 
 
 @Route("register")
-public class Register extends VerticalLayout{
+public class Register extends VerticalLayout {
     public Register() {
 
-        HtmlComponent br = new HtmlComponent("br");
+        HtmlComponent lineBreak = new HtmlComponent("br");
 
         getStyle().set("text-align", "center");
         Div div = new Div();
@@ -29,24 +30,24 @@
         div.getStyle().set("margin", "auto");
         div.getStyle().set("border-radius", "10em");
         
-        div.add(br);
-        TextField licensePlate = new TextField();
-        Paragraph licenseLabel = new Paragraph("License Plate #");
-        HorizontalLayout l4 = new HorizontalLayout(licenseLabel, licensePlate);
-        l4.setAlignItems(Alignment.CENTER);
-        l4.getStyle().set("margin-left", "9em");
-        div.add(l4);
+        div.add(lineBreak);
+        TextField licensePlateField = new TextField();
+        Paragraph licensePlateLabel = new Paragraph("License Plate #");
+        HorizontalLayout licensePlateLayout = new HorizontalLayout(licensePlateLabel, licensePlateField);
+        licensePlateLayout.setAlignItems(Alignment.CENTER);
+        licensePlateLayout.getStyle().set("margin-left", "9em");
+        div.add(licensePlateLayout);
 
         
 
         TextField licensePlateConfirm = new TextField();
         Paragraph licenseLabelConfirm = new Paragraph("Confirm Plate #");
-        HorizontalLayout l3 = new HorizontalLayout(licenseLabelConfirm, licensePlateConfirm);
-        l3.setAlignItems(Alignment.CENTER);
-        l3.getStyle().set("margin-left", "9em");
-        div.add(l3);
+        HorizontalLayout licensePlateConfirmLayout = new HorizontalLayout(licenseLabelConfirm, licensePlateConfirm);
+        licensePlateConfirmLayout.setAlignItems(Alignment.CENTER);
+        licensePlateConfirmLayout.getStyle().set("margin-left", "9em");
+        div.add(licensePlateConfirmLayout);
 
-//TODO: store vehicleType selection in DB
+
         ComboBox vehicleType = new ComboBox("Select your vehicle type: ");
         vehicleType.setItems("Motorcycle","Truck", "SUV", "Electric Vehicle");
         HorizontalLayout l5 = new HorizontalLayout(vehicleType);
@@ -54,39 +55,37 @@
         l5.getStyle().set("margin-left", "9em");
         div.add(l5);
 
+        //TODO: store vehicleType selection in DB
         
 
-
-
-
         PasswordField password = new PasswordField();
         Paragraph passwordLabel = new Paragraph("Enter a Password");
-        HorizontalLayout l2 = new HorizontalLayout(password, passwordLabel);
-        l2.setAlignItems(Alignment.CENTER);
-        l2.getStyle().set("margin-left", "9em");
-        div.add(l2);
+        HorizontalLayout passwordLayout = new HorizontalLayout(password, passwordLabel);
+        passwordLayout.setAlignItems(Alignment.CENTER);
+        passwordLayout.getStyle().set("margin-left", "9em");
+        div.add(passwordLayout);
 
         PasswordField passwordConfirm = new PasswordField();
         Paragraph passwordLabelConfirm = new Paragraph("Confirm Password");
-        HorizontalLayout l = new HorizontalLayout(passwordConfirm, passwordLabelConfirm);
-        l.setAlignItems(Alignment.CENTER);
-        l.getStyle().set("margin-left", "9em");
-        div.add(l);
+        HorizontalLayout passwordConfirmLayout = new HorizontalLayout(passwordConfirm, passwordLabelConfirm);
+        passwordConfirmLayout.setAlignItems(Alignment.CENTER);
+        passwordConfirmLayout.getStyle().set("margin-left", "9em");
+        div.add(passwordConfirmLayout);
 
         Button registerButton = new Button("Register");
         registerButton.addClickListener(e -> {
             boolean passwordChecked = false;
             boolean licenseChecked = false;
-            if(password.getValue() == "") passwordLabel.getStyle().set("color", "red");
+            if(Objects.equals(password.getValue(), "")) passwordLabel.getStyle().set("color", "red");
             else passwordLabel.getStyle().set("color", "black");
 
-            if(licensePlate.getValue() == "") licenseLabel.getStyle().set("color", "red");
-            else licenseLabel.getStyle().set("color", "black");
+            if(Objects.equals(licensePlateField.getValue(), "")) licensePlateLabel.getStyle().set("color", "red");
+            else licensePlateLabel.getStyle().set("color", "black");
 
-            if(licensePlateConfirm.getValue() == "") licenseLabelConfirm.getStyle().set("color", "red");
+            if(Objects.equals(licensePlateConfirm.getValue(), "")) licenseLabelConfirm.getStyle().set("color", "red");
             else licenseLabelConfirm.getStyle().set("color", "black");
 
-            if(passwordConfirm.getValue() == "") passwordLabelConfirm.getStyle().set("color", "red");
+            if(Objects.equals(passwordConfirm.getValue(), "")) passwordLabelConfirm.getStyle().set("color", "red");
             else passwordLabelConfirm.getStyle().set("color", "black");
             
             if(!password.getValue().equals(passwordConfirm.getValue()) && password.getValue() != "" && passwordConfirm.getValue() != ""){
@@ -99,12 +98,13 @@
                 passwordChecked = true;
             }
 
-            if(!licensePlate.getValue().equals(licensePlateConfirm.getValue()) && licensePlate.getValue() != "" && licensePlateConfirm.getValue() != ""){
-                licenseLabel.getStyle().set("color", "red");
+            if(!licensePlateField.getValue().equals(licensePlateConfirm.getValue()) &&
+                    !Objects.equals(licensePlateField.getValue(), "") && !Objects.equals(licensePlateConfirm.getValue(), "")){
+                licensePlateLabel.getStyle().set("color", "red");
                 licenseLabelConfirm.getStyle().set("color", "red");
             }
-            if(licensePlate.getValue().equals(licensePlateConfirm.getValue()) && licensePlate.getValue() != "" && licensePlateConfirm.getValue() != ""){
-                licenseLabel.getStyle().set("color", "#065535");
+            if(licensePlateField.getValue().equals(licensePlateConfirm.getValue()) && !Objects.equals(licensePlateField.getValue(), "") && licensePlateConfirm.getValue() != ""){
+                licensePlateLabel.getStyle().set("color", "#065535");
                 licenseLabelConfirm.getStyle().set("color", "#065535");
                 licenseChecked = true;
             } 
@@ -113,8 +113,8 @@
                 InfluxHandler influx = new InfluxHandler();
                 try {
                     influx.createDB("mydb");
-                    influx.postData(password.getValue(), licensePlate.getValue());
-                    influx.postDataKey(licensePlate.getValue(), influx.getAlphaNumericString(40));
+                    influx.postData(password.getValue(), licensePlateField.getValue());
+                    influx.postDataKey(licensePlateField.getValue(), influx.getAlphaNumericString(40));
                     Thread.sleep(2000);
                     registerButton.getUI().ifPresent(ui ->
                             ui.navigate("")
Index: src/main/java/com/project/CS151Parking_Management_System/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.CS151Parking_Management_System;\n\nimport java.io.IOException;\n\nimport com.vaadin.flow.component.HtmlComponent;\nimport com.vaadin.flow.component.button.Button;\nimport com.vaadin.flow.component.html.Div;\nimport com.vaadin.flow.component.html.Paragraph;\nimport com.vaadin.flow.component.orderedlayout.HorizontalLayout;\nimport com.vaadin.flow.component.orderedlayout.VerticalLayout;\nimport com.vaadin.flow.component.textfield.PasswordField;\nimport com.vaadin.flow.component.textfield.TextField;\nimport com.vaadin.flow.router.Route;\n\n@Route(\"login\")\npublic class Login extends VerticalLayout{\n    public Login() {\n        HtmlComponent br = new HtmlComponent(\"br\");\n\n        getStyle().set(\"text-align\", \"center\");\n        Div div = new Div();\n        setHorizontalComponentAlignment(Alignment.CENTER, div);\n        div.getStyle().set(\"background-color\", \"#AFEEEE\");\n        div.getStyle().set(\"width\", \"50%\");\n        div.getStyle().set(\"height\", \"12.75em\");\n        div.getStyle().set(\"margin\", \"auto\");\n        div.getStyle().set(\"border-radius\", \"10em\");\n        \n        div.add(br);\n        TextField licensePlate = new TextField();\n        Paragraph licenseLabel = new Paragraph(\"License Plate #\");\n        HorizontalLayout l4 = new HorizontalLayout(licenseLabel, licensePlate);\n        l4.setAlignItems(Alignment.CENTER);\n        l4.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l4);\n\n        \n\n        PasswordField password = new PasswordField();\n        Paragraph passwordLabel = new Paragraph(\"Password\");\n        HorizontalLayout l3 = new HorizontalLayout(password, passwordLabel);\n        l3.setAlignItems(Alignment.CENTER);\n        l3.getStyle().set(\"margin-left\", \"9em\");\n        div.add(l3);\n\n        Button loginButton = new Button(\"Login\");\n        Paragraph statusText = new Paragraph(\"Please Enter Your Information\");\n        statusText.getStyle().set(\"color\", \"#1D3F6E\");\n        loginButton.addClickListener(e -> {\n            InfluxHandler influx = new InfluxHandler();\n            try {\n                String dataMydb = influx.getData(\"mydb\");\n                String dataKey = influx.getData(\"keys\");\n                String passwordText = influx.parseData(dataMydb, licensePlate.getValue(), false);\n                String key = influx.parseData(dataKey, licensePlate.getValue(), false);\n                if(passwordText.equals(\"Wrong License Plate\"))\n                    statusText.setText(\"We dont recognize that licenseplate\");\n                else if(password.getValue().equals(passwordText)){\n                    statusText.setText(\"Successful\");\n                        loginButton.getUI().ifPresent(ui ->\n                            ui.navigate(\"homePage/\" + licensePlate.getValue() + \"/\" + key)\n                        );\n                }\n                else \n                    statusText.setText(\"Wrong\");\n            } catch (IOException e1) {\n                e1.printStackTrace();\n            }\n        });\n\n        div.add(loginButton);\n        div.add(statusText);\n        add(div);\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/Login.java b/src/main/java/com/project/CS151Parking_Management_System/Login.java
--- a/src/main/java/com/project/CS151Parking_Management_System/Login.java	
+++ b/src/main/java/com/project/CS151Parking_Management_System/Login.java	
@@ -49,10 +49,11 @@
         loginButton.addClickListener(e -> {
             InfluxHandler influx = new InfluxHandler();
             try {
-                String dataMydb = influx.getData("mydb");
+                String parkingData = influx.getData("mydb");
                 String dataKey = influx.getData("keys");
-                String passwordText = influx.parseData(dataMydb, licensePlate.getValue(), false);
+                String passwordText = influx.parseData(parkingData, licensePlate.getValue(), false);
                 String key = influx.parseData(dataKey, licensePlate.getValue(), false);
+                System.out.println(key);
                 if(passwordText.equals("Wrong License Plate"))
                     statusText.setText("We dont recognize that licenseplate");
                 else if(password.getValue().equals(passwordText)){
Index: src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java b/src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/project/CS151Parking_Management_System/LowerCaseCharacterMissing.java	
@@ -0,0 +1,9 @@
+package com.project.CS151Parking_Management_System;
+
+public class LowerCaseCharacterMissing extends PasswordException
+{
+	public LowerCaseCharacterMissing()
+	{
+		super("Password must contain at least one lowercase character.\nPlease try again.");
+	}
+}
Index: src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java b/src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/project/CS151Parking_Management_System/Minimum8CharactersRequired.java	
@@ -0,0 +1,9 @@
+package com.project.CS151Parking_Management_System;
+
+public class Minimum8CharactersRequired extends PasswordException
+{
+	public Minimum8CharactersRequired()
+	{
+		super("Password must contain a minimum of 8 characters.\nPlease try again.");
+	}
+}
